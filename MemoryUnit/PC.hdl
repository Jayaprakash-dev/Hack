/**
 * A 16-bit counter (program counter).
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    // pc incrementer
    Inc16(in= regOut, out= incOut);

    // if inc then PC++
    Mux16(a= regOut, b= incOut, sel= inc, out= incPC);

    // if (load) then nextPC = in (do Jump)
    Mux16(a= incPC, b= in, sel= load, out= afterJumpOrIncPC);

    // if reset then nextPC = 0
    // else pc = nextPC
    Mux16(a= afterJumpOrIncPC, b= false, sel= reset, out= nextPC);

    //  PC register
    Register(in= nextPC, load= true, out= regOut, out = out);
}
